
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.net.URL;
import java.util.ArrayList;
import java.util.StringTokenizer;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author dell
 */
public class User_Show_Stories extends javax.swing.JFrame {

    /**
     * Creates new form User_Show_Stories
     */
    int post_id;
    int w, h;
    ArrayList<String> al = new ArrayList<>();
    ArrayList<String> al2 = new ArrayList<>();
    int count;

    public User_Show_Stories(int postid) {
        initComponents();
        post_id = postid;
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        w = d.width;
        h = d.height;
        setSize(w, h);
        mainpannel.setSize(w - 50, 100);
        jphoto.setText("");
        jcaption.setText("");
        jphoto.setBounds(450, 200, 350, 350);
        jcaption.setBounds(550, 570, 200, 70);
        System.out.println("===================================================postid----" + post_id);
        getContentPane().setBackground(Color.white);
        setVisible(true);
        fetch_Story(post_id);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpannel = new javax.swing.JPanel();
        jphoto = new javax.swing.JLabel();
        jcaption = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        mainpannel.setBackground(new java.awt.Color(0, 0, 0));
        mainpannel.setLayout(null);
        getContentPane().add(mainpannel);
        mainpannel.setBounds(10, 20, 540, 90);

        jphoto.setText("jLabel1");
        getContentPane().add(jphoto);
        jphoto.setBounds(120, 140, 350, 120);

        jcaption.setFont(new java.awt.Font("Bookman Old Style", 3, 18)); // NOI18N
        jcaption.setText("jLabel1");
        getContentPane().add(jcaption);
        jcaption.setBounds(50, 310, 470, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public void fetch_Story(int postid) {
        new Thread(new Runnable() {
            @Override
            public void run() {
//               throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.

                System.out.println("" + postid);
                String username = "";
                try {
                    HttpResponse<String> httpResponse = Unirest.get(global.ip_address + "getAllstories")
                            .queryString("username", username)
                            .queryString("post_id", postid)
                            .asString();

                    if (httpResponse.getStatus() == 200) {
                        String ans = httpResponse.getBody();
                        System.out.println(ans);
                        int x = 20, y = 15;
                        mainpannel.removeAll();

                        StringTokenizer st = new StringTokenizer(ans, "~~");
                        count = st.countTokens();
                        if (count == 0) {
                            JOptionPane.showMessageDialog(rootPane, "No stories yet!");
                            dispose();
                        } else {

                            int width = (w - 50) / count;
                            mainpannel.setPreferredSize(new Dimension(1000, (210 * count)));

                            User_Show_Story_Design ussd[] = new User_Show_Story_Design[count];
                            int i = 0;
                            while (st.hasMoreTokens()) {
                                String ans2 = st.nextToken();
                                StringTokenizer st2 = new StringTokenizer(ans2, "!!");
                                String caption = st2.nextToken();
                                String photo = st2.nextToken();
                                int story_id = Integer.parseInt(st2.nextToken());

                                //System.out.println(story_id + "......" + caption + "......" + al.get(i));
                                ussd[i] = new User_Show_Story_Design();
                                ussd[i].setBounds(x, y, width, 70);
                                x = x + width + 10;
                                ussd[i].jProgressBar1.setSize(width - 25, 30);
                                //  ussd[i].setSize(width - 25, 30);

                                al.add(photo);
                                al2.add(caption);

                                mainpannel.add(ussd[i]);
                                mainpannel.repaint();
                                repaint();
                                i++;
                            }

                            for (int j = 0; j < al.size(); j++) {

                                try {
                                    String photo;
                                    URL url = new URL(global.ip_address + "GetResource/" + al.get(j));
                                    //System.out.println("Path of Image Stored in server side--------------" + url);
                                    BufferedImage img = ImageIO.read(url);
                                    Image resizedimage = img.getScaledInstance(jphoto.getWidth(), jphoto.getHeight(), Image.SCALE_SMOOTH);
                                    jphoto.setIcon(new ImageIcon(resizedimage));

                                } catch (Exception e) {
                                    e.printStackTrace();
                                }
                                jcaption.setText(al2.get(j));

                                for (int k = 0; k <= 100; k++) {

                                    ussd[j].jProgressBar1.setString(k + "%");
                                    ussd[j].jProgressBar1.setValue(k);
                                    ussd[j].jProgressBar1.setStringPainted(true);

                                    Thread.sleep(100);
                                }
                            }
                        }

                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User_Show_Stories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User_Show_Stories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User_Show_Stories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User_Show_Stories.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // new User_Show_Stories().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jcaption;
    private javax.swing.JLabel jphoto;
    private javax.swing.JPanel mainpannel;
    // End of variables declaration//GEN-END:variables
}
